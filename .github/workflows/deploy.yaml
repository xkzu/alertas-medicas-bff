name: CI/CD Pipeline

on:
  push:
    tags:
      # Se activa con tags sem√°nticos
      - 'v*.*.*' 

jobs:
  build-and-deploy:
    # Solo se ejecute en la rama dev
    # if: github.ref == 'refs/heads/dev' 
    runs-on: ubuntu-latest

    env:
      DOCKER_IMAGE_NAME: ecodisonante/cloudnative.bff

    steps:
      # 1. Checkout del repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configurar acceso a Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      # 3. Construir la imagen Docker
      - name: Build Docker image
        run: |
          TAG=$(echo $GITHUB_REF | sed 's/refs\/tags\///')
          docker build \
            --file ./Dockerfile \
            --build-arg API_DOCTORS_URL=http://doctor:8081 \
            --build-arg API_PATIENT_URL=http://patient:8082 \
            --build-arg API_MEASUREMENT_URL=http://measurement:8085 \
            --tag $DOCKER_IMAGE_NAME:$TAG \
            ./alertas-medicas-bff

      # 4. Subir la imagen a Docker Hub
      - name: Push Docker image
        run: |
          TAG=$(echo $GITHUB_REF | sed 's/refs\/tags\///')
          docker push $DOCKER_IMAGE_NAME:$TAG

      # 5. Despliegue en el servidor AWS
      - name: Deploy to AWS Server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.AWS_SERVER_IP }}
          username: ${{ secrets.AWS_SERVER_USER }}
          key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            TAG=$(echo $GITHUB_REF | sed 's/refs\/tags\///')
            docker pull $DOCKER_IMAGE_NAME:$TAG

            # Detener y eliminar el contenedor actual (si existe)
            docker stop bff || true
            docker rm bff || true

            # Correr el contenedor con las variables de entorno
            docker run -d --name bff \
              -p 8084:8084 \
              --env cors.allowed-origins=${{ secrets.CORS_ALLOWED_ORIGINS }} \
              --env server.port=8084 \
              --env spring.security.oauth2.resourceserver.jwt.jwk-set-uri${{ secrets.JWK_SET_URI }} \
              --env spring.application.name=bff \
              --env api.doctors=http://doctor-service:8081 \
              --env api.patient=http://paciente-service:8082 \
              --env api.measurement=http://signos-service:8083 \
              $DOCKER_IMAGE_NAME:$TAG
